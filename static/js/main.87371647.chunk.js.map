{"version":3,"sources":["NavBar/PageNames.js","NavBar/NavBar.js","pages/about.js","calculation/equilibriumCalc.js","calculation/util.js","calculation/calculations.js","pages/solver.js","components/contactspopup.js","components/footer.js","App.js","index.js"],"names":["PageNames","title","url","cName","NavBar","state","clicked","className","id","map","item","index","href","Component","About","Figure","Image","src","x_eq","a","y","dataArray","createLines","xStart","xEnd","yStart","yEnd","jsonDataFormat","x","name","color","data","mode","type","line","showlegend","legendgroup","addDataArray","push","numStages","feedStage","minReflux","calculationSequence","z","yD","xB","q","refluxRatio","alpha","isNaN","checkInput","minPoint","root1","root2","x1","b","discriminant","Math","sqrt","calculateMinPoint","minInt","stripLine","intersectionPoint","calcIntersectionPoint","feedLine","strippingLine","rectifyingLine","botComp","feedComp","distlComp","minLine","equilibriumValues","xVal","i","denominator","equilibriumCurve","diagonalLineValues","step","diagonalLine","feedLineData","strippingLineData","rectifyingLineData","equilData","diagonalLineData","botCompData","feedCompData","distlCompData","minLineData","xI","yI","xStripStep","xStep","yStep","xRectStop","xRectLine","yRectStop","recLine","yRectLine","yStripStop","yStripLine","yStripData","xStripStop","xStripLine","xStripData","fractionStage","stepOff","toFixed","stripSlope","Solver","props","zToolTip","Tooltip","yDToolTip","xBToolTip","qToolTip","refluxToolTip","alphaToolTip","reflux","layout","stages","zValidity","yDValidity","xBValidityL","qValidity","refluxValidity","alphaValidity","validateNumber","bind","validateDecimal","validateRatio","boolean","console","log","this","setState","xBValidity","event","target","value","test","setEmptyInput","getData","stage","parseFloat","autosize","xaxis","range","text","font","family","size","linecolor","linewidth","mirror","yaxis","paper_bgcolor","borderwidth","bordercolor","width","height","renderChart","OverlayTrigger","placement","overlay","onChange","style","border","borderWidth","outline","visibility","onInitialized","ContactsPopUpContainer","emailRef","useRef","textRef","useState","visible","setVisibility","copySuccess","setCopySuccess","onClick","ref","opacity","position","top","display","e","current","select","document","execCommand","focus","rel","Footer","showContacts","App","basename","path","component","solver","about","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87371647.chunk.js","sourcesContent":["export const PageNames = [\n    {\n        title:\"Solver\",\n        url:'/ReactBinary',\n        cName:'nav-links',\n    },\n    {\n        title:\"About\",\n        url:'/ReactBinary/about',\n        cName:'nav-links',\n    },\n\n]","import React,{Component} from 'react';\nimport {PageNames} from \"./PageNames\"\nimport './NavBar.css'\n\n\nclass NavBar extends Component {\n    state = {clicked:false}\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-sm justify-content-center\">\n                <h1 id=\"logo\" className=\"navbar-brand d-flex w-50 mr-auto\">Binary Distillation Solver</h1>\n                <div className=\"navbar-collapse collapse w-100\" id=\"collapsingNavbar3\">\n                    <ul className=\"navbar-nav w-100 justify-content-center\">\n                        {PageNames.map((item,index)=> {\n                            return (\n                                <li key={index}>\n                                    <a className={item.cName} href={item.url}>\n                                        {item.title}\n                                    </a>\n                                </li>\n                            )\n                        })}\n                        \n                    </ul>\n                    <ul className=\"nav navbar-nav ml-auto w-100 justify-content-end\">\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar","import React from 'react';\nimport Figure from 'react-bootstrap/Figure'\n\nimport './page.css'\nconst About = () => {\n    return (\n        <><div><h1 className=\"background\">Background</h1></div><div className=\"row no-gutters\">\n            <div className=\"col-sm-3\">\n                <Figure>\n                    <Figure.Image src=\"https://prod-qna-question-images.s3.amazonaws.com/qna-images/question/2b910e09-d07b-48b1-888a-1cfc810938be/958e02a9-0bab-4c36-8aac-b82225a046a2/yqv58gl_processed.png\" />\n                </Figure>\n            </div>\n            <div className=\"col\">\n                <p id=\"descript\">\n                    This solver uses the McCabe-Thiele graphical method to determine the number of stages a binary distillation needs in order to achieve the desired distillate composition.\n                    The solver also determines the optimal feed stage and minimum reflux ratio.\n                    This solver assumes constant molal in order to simplify the problem.\n                    Feel free to use this solver to save yourself time on homework problems in which it requires this graphically iterative process.\n                </p>\n            </div>\n        </div></>\n    )\n}\n\nexport default About;","//McCabe-Thiele graphical method for the number of theoretical stages required for a binary distillation\n//Author: Dylan Au\n\n/*This function returns the equilibrium mol fractions based on the relative volatility of the two components being separated\n*/ \nexport function equilibriumCurve(alpha) {\n    var x = [0];\n    var y = [0];\n    const step = 0.01;\n    var xVal= 0;\n    for (let i=0;i < 100;i++) {\n        xVal = xVal + step;\n        var denominator = (1+(alpha-1)*xVal)\n       \n        if ( denominator <= 0) {\n           \n            return \"Error\"\n        }\n        x.push(xVal);\n        y.push(alpha*xVal/denominator);\n    }\n   \n    return [x,y];\n}\n\n/*This function returns the liquid mol fraction (x) in equilibrium of the given gas mol fraction (y)\n*/\nexport function x_eq(a,y){\n    var x = y/ (a * (1 - y) + y)\n    return x;\n}","//McCabe-Thiele graphical method for the number of theoretical stages required for a binary distillation\n//Author: Dylan Au\n\n//The functions below are utility functions that aid to transform data and to help generate the graph\n\n\n\nvar dataArray = [];\nexport function createLines(xStart,xEnd,yStart,yEnd) {\n    var xPoints = [xStart,xEnd];\n    var yPoints = [yStart,yEnd];\n    return [xPoints,yPoints];\n  }\n  \nexport function jsonDataFormat(x,y,name,color) {\n    if (name ===\"\") {\n        var data =  {\n            x:x,\n            y:y,\n            mode:\"lines\",\n            type:\"scatter\",\n  \n            line: {\n              color:color\n  \n            },\n            showlegend:false\n        };\n    }\n    else if (name ===\"staircase\") {\n      data =  {\n        x:x,\n        y:y,\n        mode:\"lines\",\n        type:\"scatter\",\n\n        line: {\n          color:color\n\n        },\n        name:name,\n        legendgroup:\"staircase\",\n      }\n    }\n    else if (name ===\"staircasehide\") {\n      data =  {\n        x:x,\n        y:y,\n        mode:\"lines\",\n        type:\"scatter\",\n\n        line: {\n          color:color\n\n        },\n        legendgroup:\"staircase\",\n        showlegend:false\n      }\n    }\n    else {\n        data =  {\n            x:x,\n            y:y,\n            mode:\"lines\",\n            type:\"scatter\",\n  \n            line: {\n              color:color\n  \n            },\n            name:name\n        };\n    }\n  \n    return data;\n  }\n  \nexport function addDataArray(data) {\n    dataArray.push(data);\n    return dataArray;\n  }\n\nexport function getDataArray() {\n    return dataArray\n}\n  \nexport function renderChart(dataArray) {\n    var layout = {\n      title:\"<b>McCabe-Thiele Y-X Diagram </b>\",\n      autosize:true,\n      xaxis: {\n          range: [0,1],\n          title: {\n            text: 'x',\n            font: {\n              family:  \"Helvetica,Arial,sans-serif\",\n              size: 18,\n              color: '#030303',\n            },\n          },\n          linecolor: 'black',\n          linewidth: 1,\n          mirror: true,\n        },\n        yaxis: {\n          range: [0,1],\n          title: {\n            text: 'y',\n            font: {\n              family: \"Helvetica,Arial,sans-serif\",\n              size: 18,\n              color: '#030303',\n            },\n          },\n          linecolor: 'black',\n          linewidth: 1,\n          mirror: true,\n        },\n        paper_bgcolor:'#fff',\n        borderwidth:\"1px\",\n        bordercolor:\"rgb(0,0,0)\", \n        width: 800,\n        height: 500,     \n      }  \n      \n    return [dataArray,layout]\n   }\n  \nexport function resetData() {\n  dataArray = []\n}","//McCabe-Thiele graphical method for the number of theoretical stages required for a binary distillation\n//Author: Dylan Au\n\n\n//Calls the various functions required to calculate and generate the McCabe-Thiele Graph\n\n\nimport {equilibriumCurve,x_eq} from \"./equilibriumCalc\";\nimport {createLines,jsonDataFormat,addDataArray,resetData} from \"./util\";\nvar numStages = 0;\nvar feedStage = 0;\nvar minReflux = 0;\nexport function calculationSequence(z,yD,xB,q,refluxRatio,alpha) {\n    resetValues()\n    resetData()\n    if ( !checkInput(z,yD,xB,q,refluxRatio,alpha)) {\n      return [\"Input Error\",\"Input Error\",\"Input Error\"]\n    }\n\n    var minPoint= calculateMinPoint(q,alpha,z)\n    if (minPoint === \"Error\") {\n     \n      return [\"Input Error\",\"Input Error\",\"Input Error\"]\n    }\n    var minInt = stripLine(0,yD,minPoint[0],minPoint[1])\n    minReflux = calculateMinimumRefluxRatio(minInt,yD)\n    if (refluxRatio < minReflux) {\n      return [\"N/A\",\"N/A\",\"Check Input!!! Given reflux < Minimum reflux!!!\"]\n    }\n    else {\n      var intersectionPoint = calcIntersectionPoint(z,yD,q,refluxRatio);\n      var feedLine = createLines(z,intersectionPoint[0],z,intersectionPoint[1]);\n      var strippingLine =createLines(yD,intersectionPoint[0],yD,intersectionPoint[1]) ;\n      var rectifyingLine =createLines(xB,intersectionPoint[0],xB,intersectionPoint[1]) ;\n      var botComp = createLines(xB,xB,0,xB);\n      var feedComp = createLines(z,z,0,z);\n      var distlComp = createLines(yD,yD,0,yD);\n      var minLine = createLines(0,yD,minInt,yD)\n      \n      \n      \n      var equilibriumValues = equilibriumCurve(alpha);\n      \n      if (equilibriumValues === \"Error\") {\n        return [\"Input Error\",\"Input Error\",\"Input Error\"] \n      }\n      \n      var diagonalLineValues = diagonalLine()\n      \n      var feedLineData = jsonDataFormat(feedLine[0],feedLine[1],\"Feed Line\",\"rgb(10,97,247)\");\n      var strippingLineData = jsonDataFormat(strippingLine[0],strippingLine[1],\"Stripping Line\",\"rgb(211,69,233)\");\n      var rectifyingLineData = jsonDataFormat(rectifyingLine[0],rectifyingLine[1],\"Rectifying Line\",\"rgb(55,220,72)\");\n      var equilData = jsonDataFormat(equilibriumValues[0],equilibriumValues[1],\"Equilibrium Curve\",\"rgb(200,0,0)\")\n      var diagonalLineData = jsonDataFormat(diagonalLineValues[0],diagonalLineValues[1],\"\",\"rgb(0,0,0)\");\n      var botCompData = jsonDataFormat(botComp[0],botComp[1],\"\",\"rgb(240,136,44)\");\n      var feedCompData = jsonDataFormat(feedComp[0],feedComp[1],\"\",\"rgb(240,136,44)\");\n      var distlCompData = jsonDataFormat(distlComp[0],distlComp[1],\"\",\"rgb(240,136,44)\");\n      var minLineData = jsonDataFormat(minLine[0],minLine[1],\"Minimum Reflux\",\"grey\")\n      \n      stepOff(xB,yD,intersectionPoint[0],intersectionPoint[1],refluxRatio,alpha);\n      if (numStages >= 100)  {\n        return [\" Check Input!!! Number of Stages > 100!!!\",\"N/A\",\"N/A\"]\n      }\n      addDataArray(feedLineData);\n      addDataArray(strippingLineData);\n      addDataArray(rectifyingLineData);\n      addDataArray(equilData);\n      addDataArray(diagonalLineData);\n      addDataArray(botCompData);\n      addDataArray(feedCompData);\n      addDataArray(distlCompData);\n      addDataArray(minLineData)\n      \n      return [numStages.toFixed(2),feedStage.toFixed(0),minReflux.toFixed(2)]\n      \n\n\n    }\n   \n}\n\n//Calculates the intersection point of the stripping, rectifying, and feed line\nfunction calcIntersectionPoint(z,yD,q,refluxRatio) {\n  var xIntersect = (-(q-1)*(1-refluxRatio/(refluxRatio+1))*yD-z)/((q-1)*refluxRatio/(refluxRatio+1)-q);\n  var yIntersect = (z+yD*q/refluxRatio)/(1+q/refluxRatio);\n  return [xIntersect,yIntersect];\n}\n\n//Generates the y=x reference line\nfunction diagonalLine(){\n    var x = [0];\n    const step = 0.1;\n    var xVal= 0;\n    for (let i=0;i < 10;i++) {\n        xVal = xVal + step;\n        x.push(xVal);\n    }\n    var y = x;\n    return [x,y]\n}\n\n//Calculates the y mol fraction value of the rectifying line\nfunction recLine(x,yD,refluxRatio) {\n  var y = refluxRatio/(refluxRatio+1)*x + yD/(refluxRatio+1);\n  return y;\n}\n\n//Calculates the y mol fraction value of the stripping line\nfunction stripLine(x,xB,xI,yI) {\n  var stripSlope = (xB - yI)/(xB-xI);\n  var int = yI-stripSlope*xI;\n  var y = stripSlope*x + int;\n  return y;\n}\n\n\n\n//Calculates the intersection points of the staircase, number of stages required to achieve the desired distillate composition, and the optimal feed stage\nfunction stepOff(xB,yD,xI,yI,refluxRatio,alpha) {\n  //Rectifying Section\n  var xStep=yD;\n  var yStep=yD;\n  var xStripStep;\n  \n    while (xStep>xI){\n      if (numStages > 100) {\n        break;\n      }\n      var xRectStop = x_eq(alpha,yStep);\n      var xRectLine = createLines(xStep,xRectStop,yStep,yStep);\n      var xRectData = jsonDataFormat(xRectLine[0],xRectLine[1],\"staircasehide\",\"rgb(0,0,0\");\n      addDataArray(xRectData);\n      if (xRectStop<xI) {\n        xStripStep = xRectStop;\n  \n        break;\n      }\n      \n      var yRectStop = recLine(xRectStop,yD,refluxRatio);\n      var yRectLine = createLines(xRectStop,xRectStop,yStep,yRectStop);\n      var yRectData = jsonDataFormat(yRectLine[0],yRectLine[1],\"staircasehide\",\"rgb(0,0,0\");\n      addDataArray(yRectData);\n      xStep = xRectStop;\n      yStep = yRectStop;\n      \n      numStages++;\n      \n    }\n     \n    // Stripping section\n    feedStage = numStages + 1;\n    while (xStripStep>xB) {\n      if (numStages > 100) {\n        break;\n      }\n      var yStripStop = stripLine(xStripStep,xB,xI,yI);\n      var yStripLine = createLines(xStripStep,xStripStep,yStep,yStripStop);\n      var yStripData = jsonDataFormat(yStripLine[0],yStripLine[1],\"staircasehide\",\"rgb(0,0,0\");\n      addDataArray(yStripData);\n  \n      var xStripStop = x_eq(alpha,yStripStop);\n      var xStripLine = createLines(xStripStep,xStripStop,yStripStop,yStripStop);\n      var xStripData = jsonDataFormat(xStripLine[0],xStripLine[1],\"staircasehide\",\"rgb(0,0,0)\")\n      addDataArray(xStripData);\n  \n      xStripStep = xStripStop;\n      yStep = yStripStop;\n      numStages++;\n  \n      if (xStripStep<xB) {\n        yStripStop = xStripStep\n        yStripLine = createLines(xStripStep,xStripStep,yStep,yStripStop);\n        yStripData = jsonDataFormat(yStripLine[0],yStripLine[1],\"staircase\",\"rgb(0,0,0\");\n        addDataArray(yStripData);\n        break;\n      }\n    }\n    if (typeof(xStripData) != \"undefined\" && typeof(yStripData) != \"undefined\") {\n      var fractionStage = (xStripData.x[0] - xB) / (xStripData.x[0] - yStripData.x[1])\n      numStages = numStages + fractionStage\n    }\n\n\n    \n}\n\nfunction calculateMinPoint(q,alpha,z) {\n  let a = q*(alpha-1)\n  let b = q - z * (alpha-1) - alpha*(q-1)\n  let c = -z\n  var discriminant = b*b - 4 * a * c\n  \n  var root1, root2;\n\n  var x1 \n  if (a === 0) {\n    return \"Error\"\n  }\n\n  if (discriminant < 0 ) {\n    return \"Error\"\n  }\n  else if (discriminant > 0) {\n    root1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n    root2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n    if ( root1 > 1 && root2 > 1) {\n     return \"Error\"\n    }\n    else if (root1 > 0 || root1 < 1) {\n      x1 = root1\n    }\n    else {\n      x1 = root2\n    }\n  }\n  else {\n    root1 = root2 = -b / (2 * a);\n    x1 = root1\n  }\n\n  var y1 = alpha*x1 / (1+x1*(alpha-1) )\n  \n  return [x1,y1]\n    \n}\n\nfunction calculateMinimumRefluxRatio(int,xD) {\n  return xD/int - 1\n}\n\n\nfunction resetValues() {\n  numStages = 0;\n  feedStage = 0;\n}\n\nfunction checkInput(z,yD,xB,q,refluxRatio,alpha) {\n\n  if (isNaN(z) || isNaN(yD)  || isNaN(xB)  || isNaN(q)  || isNaN(refluxRatio)  || isNaN(alpha)  ) {\n    return false\n  }\n  else {\n    return true\n  }\n}","import React,{Component} from 'react';\nimport { BsInfoCircleFill } from \"react-icons/bs\";\n\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\nimport {calculationSequence} from \"../calculation/calculations\";\nimport {getDataArray,renderChart} from \"../calculation/util\";\nimport Plot from 'react-plotly.js';\n\n\nclass Solver extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          z: \"0.5\",\n          yD: \"0.9\",\n          xB: \"0.1\",\n          q: \"1.1\",\n          reflux: \"1.5\",\n          alpha: \"2.45\",\n          data: [], \n          layout: {},\n          stages:0,\n          feedStage:0,\n          minReflux:0,\n          zValidity: false,\n          yDValidity: false,\n          xBValidityL: false,\n          qValidity: false,\n          refluxValidity: false,\n          alphaValidity: false,\n        };\n        this.validateNumber = this.validateNumber.bind(this);\n        this.validateDecimal = this.validateDecimal.bind(this);\n        this.validateRatio = this.validateRatio.bind(this);\n      }\n\n      zToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the composition of the more volatile component in the binary composition. Enter a value from 0-1 (e.g. 0.525)\n        </Tooltip>\n      );\n\n      yDToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the distillate composition of the more volatile component that leaves the top of the column. Enter a value from 0-1 (e.g. 0.925)\n        </Tooltip>\n      );\n\n      xBToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the bottoms composition of the more volatile component that leaves the bottom of the column. Enter a value from 0-1 (e.g. 0.05)\n        </Tooltip>\n      );\n\n      qToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the feed quality.<br/>q{'<'}0 for superheated vapor,<br/> q=0 for saturated vapor,<br/> 0{'<'}q{'<'}1 for a mixture of liquid and vapor, <br/> q=1 for saturated liquid,<br/>q{'>'}1 for subcooled liquid\n        </Tooltip>\n      );\n\n      refluxToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the reflux ratio, the ratio of liquid that re-enters the column divided by the liquid removed as a distilled product. Enter a value greater than 0 (e.g. 1.5)\n        </Tooltip>\n      );\n\n      alphaToolTip = (props) => (\n        <Tooltip {...props}>\n        Enter the relative volatility between the two components which compares vapor pressure of the components. Enter a value greater than 0 (e.g. 2.5)\n        </Tooltip>\n      );\n      \n      setEmptyInput(name,boolean) {\n        console.log(name,boolean)\n        if (name === \"z\") {\n            this.setState ({\n                zValidity: boolean\n            })\n        }\n        else if (name === \"yD\") {\n            this.setState ({\n                yDValidity: boolean\n            })\n        }\n        else if (name === \"xB\") {\n            this.setState ({\n                xBValidity: boolean\n            })\n        }\n        else if (name === \"q\") {\n            this.setState ({\n                qValidity: boolean\n            })\n        }\n        else if (name === \"reflux\") {\n            this.setState ({\n                refluxValidity: boolean\n            })\n        }\n        else if (name === \"alpha\") {\n            this.setState ({\n                alphaValidity: boolean\n            })\n        } \n    }\n      validateNumber(event) {\n        const re = /^-?\\d*\\.?\\d*$/\n        let {value,name} = event.target;\n\n        if ( re.test(value)) {\n            if (value === \"\") {\n                this.setEmptyInput(name,true)\n            }\n            else if (value !== \"\") {\n                this.setEmptyInput(name,false)\n            }\n            this.setState({\n                [name]: value\n              }, () => {\n                this.getData()\n              });\n            }  \n        }\n\n      validateDecimal(event) {\n        const re= /^(?:0*(?:\\.\\d*)?|1(\\.0*)?)$/\n        let {value,name} = event.target;\n        \n        if ( re.test(value)) {\n            if (value === \"\") {\n                this.setEmptyInput(name,true)\n            }\n            else if (value !== \"\") {\n                this.setEmptyInput(name,false)\n            }\n            this.setState({\n                [name]: value\n              }, () => {\n                this.getData()\n              });\n            }\n        }\n\n      validateRatio(event) {\n        const re = /^\\d*\\.?\\d*$/\n        let {value,name} = event.target;\n\n        if ( re.test(value)) {\n            if (value === \"\") {\n                this.setEmptyInput(name,true)\n            }\n            else if (value !== \"\") {\n                this.setEmptyInput(name,false)\n            }\n            \n            this.setState({\n                [name]: value\n              }, () => {\n                this.getData()\n              });\n            }\n        }\n\n\n      getData() {\n          \n          let stage = calculationSequence(parseFloat(this.state.z),parseFloat(this.state.yD),parseFloat(this.state.xB),parseFloat(this.state.q),parseFloat(this.state.reflux),parseFloat(this.state.alpha))\n          let data = renderChart(getDataArray())\n        \n          this.setState ({\n              data: data[0],\n              layout:data[1],\n              stages:stage[0],\n              feedStage:stage[1],\n              minReflux:stage[2],\n          })\n      }\n\n    render() {\n        return (\n            <><div className=\"header\">\n                <h1>McCabe-Thiele Diagram</h1>\n                <p className=\"description\">Calculates total number of stages, feed stage, and minimum reflux for a distillation column to separate a binary mixture with a given Relative Volatility.</p>\n            </div>\n\n            <div className=\"row\" id=\"content-container\">\n                    <div className=\"col-sm-2\"></div>\n                    <div className=\"col-md-4\" id=\"input-container\">\n                    <h2> Input </h2>\n                    <div className=\"form-container\">\n                        <div className=\"form-group\">\n                            <div>\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.zToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp; Feed Composition (z)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"z\"\n                                    value={this.state.z}\n                                    onChange={this.validateDecimal} \n                                    style={this.state.zValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.zValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for z between 0-1 (e.g. 0.45)</span>\n                                </div>\n                            </div>\n                            \n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.yDToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp;Distillate Composition (yD)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"yD\"\n                                    value={this.state.yD}\n                                    onChange={this.validateDecimal} \n                                    style={this.state.yDValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                    />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.yDValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for yD between 0-1 (e.g. 0.95)</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.xBToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp;Bottoms Composition (xB)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"xB\"\n                                    value={this.state.xB}\n                                    onChange={this.validateDecimal} \n                                    style={this.state.xBValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                    />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.xBValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for xB between 0-1 (e.g. 0.05)</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div >\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.qToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp; Feed quality (q)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"q\"\n                                    value={this.state.q}\n                                    onChange={this.validateNumber} \n                                    style={this.state.qValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                    />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.qValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for q (e.g. -1.2)</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.refluxToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp; Reflux Ratio (L/D)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"reflux\"\n                                    value={this.state.reflux}\n                                    onChange={this.validateRatio} \n                                    style={this.state.refluxValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                    />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.refluxValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for L/D greater than 0 (e.g. 2.5) </span>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <label>\n                                    <OverlayTrigger placement=\"top\" overlay={this.alphaToolTip}>\n                                        <div className=\"icon-div\">\n                                            <BsInfoCircleFill />\n                                        </div>\n                                    </OverlayTrigger>\n                                    &nbsp; Relative volatility (α)\n                                </label>\n                            </div>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"alpha\"\n                                    value={this.state.alpha}\n                                    onChange={this.validateRatio} \n                                    style={this.state.alphaValidity ? {border:\"solid red\",borderWidth:\"1px\",outline:\"none\"} : {border:\"\"} }  \n                                    />\n                                <div className=\"validity-container\">\n                                    <span className=\"validity\" style={{ visibility: this.state.alphaValidity ? 'visible' : 'hidden' }}>&nbsp; Enter a value for relative volality greater than 0 (e.g. 1.45)</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                            \n                </div>\n                    <div className=\"col\">   \n                        <br/>\n                        <label className=\"answerLabel\"> Number of Stages: {this.state.stages} </label>\n                        <br />\n                        <label className=\"answerLabel\"> Optimal Feed Stage: {this.state.feedStage} </label>\n                        <br />\n                        <label className=\"answerLabel\"> Minimum Reflux Ratio: {this.state.minReflux} </label>\n                        <br />\n                        <Plot\n                        data={this.state.data}\n                        layout={this.state.layout}\n                        onInitialized={() => { this.getData(); } } />\n                    </div>\n                </div></>  \n                )\n            }\n        }\n\n\nexport default Solver;\n\n\n\n","import React,{useState,useRef} from 'react';\nimport {BsFillEnvelopeFill} from \"react-icons/bs\";\nimport {BsGithub} from \"react-icons/bs\";\nimport {BsLinkedin} from \"react-icons/bs\";\nimport {BsFillXCircleFill} from \"react-icons/bs\";\nimport {BsLink45Deg} from \"react-icons/bs\";\n\nconst ContactsPopUpContainer = ({}) => {\n    const emailRef = useRef(null);\n    const textRef = useRef(null);\n    const [visible,setVisibility] = useState(false);\n    const [copySuccess, setCopySuccess] = useState(\"\");\n    \n    const copyEmail = (e) => {\n        textRef.current.value = \"dylanau99@gmail.com\";\n        textRef.current.select();\n        document.execCommand(\"copy\");\n        e.target.focus();\n        setCopySuccess(\"Copied!\");\n\n    }\n\n    const closePopup = () => {\n        setVisibility(false)\n        setCopySuccess(\"\")\n    }\n    return (\n        <><a id=\"contact-button\" href=\"#/\" onClick={() => setVisibility(true)}>Contact Me</a>\n        <textarea\n        ref={textRef}\n        style={{ opacity: 0, position: \"absolute\", top: \"-200px\" }}\n      ></textarea>\n\n        <div className=\"popup-container\" style={{ display: visible ? 'block' : 'none' }}>\n            <div className=\"popup-content\">\n                <div className=\"top-window\">\n                    <button className=\"close-button\" onClick={() => closePopup()}><BsFillXCircleFill /></button>\n                </div>\n                <div className=\"popup-header\">\n                    <p>Contacts</p>\n                    <p className=\"popup-header-content\"> <br />questions? Need Help? Let me know!</p>\n                </div>\n                <div className=\"popup-links\">\n                    <ul>\n                        <li ref={emailRef}><BsFillEnvelopeFill/>&nbsp;dylanau99@gmail.com\n                            <button id=\"copy-email\" className=\"copy-button\" onClick={copyEmail}><BsLink45Deg/>\n                            </button>\n                            {copySuccess}\n                        </li>\n                        <li><BsGithub /><a href=\"https://github.com/da593\" target=\"_blank\" rel=\"noopener noreferrer\">&nbsp;My Github</a></li>\n                        <li><BsLinkedin /><a href=\"https://www.linkedin.com/in/dylan-au/\" target=\"_blank\" rel=\"noopener noreferrer\">&nbsp;My LinkedIn</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div></>\n    )\n}\n\n    \n\n\n    \nexport default ContactsPopUpContainer","import React,{Component} from 'react';\nimport ContactsPopUpContainer from './contactspopup';\n\nclass Footer extends Component{\n    constructor (props) {\n     super(props) \n     this.showContacts = this.showContacts.bind(this);  \n    }\n    showContacts(event) {\n        \n    }\n    render() {\n        return (\n\n        <div className=\"footer-container\">\n            <ul>\n                <li><ContactsPopUpContainer/></li>\n            </ul>\n        </div>\n        )\n    }\n}\n\nexport default Footer","import React from 'react';\nimport './App.css';\nimport './pages/page.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport NavBar from './NavBar/NavBar';\nimport about from './pages/about';\nimport solver from './pages/solver';\nimport Footer from \"./components/footer\"\n\n\nfunction App() {\n  return (\n   \n    <div className=\"App\">\n      \n      <Router basename=\"/ReactBinary\">\n        <NavBar/>\n          <Switch>\n            <Route path=\"/\" component = {solver} />\n            <Route path=\"/about\" component = {about} />\n          </Switch>\n      </Router>\n      <Footer/>\n    </div>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}